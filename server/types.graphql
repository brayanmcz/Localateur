###         -- ACCOUNT TYPES --         ###

interface Account {
  id: ID! @isUnique
  createdAt: DateTime!
  updatedAt: DateTime!

  authID: String!
  firstName: String!
  lastName: String!
  profileImage: String
  email: String!
  phone: String
  langPref: String
  bio: String
  gender: String @shape(in: ["male", "female", "other"])
  ethnicity: String
  birthday: String
  following: [String!]
  followers: [String!]
}

type Consumer implements Account {
  id: ID! @isUnique
  createdAt: DateTime!
  updatedAt: DateTime!

  authID: String!
  firstName: String!
  lastName: String!
  profileImage: String
  email: String!
  phone: String
  langPref: String
  bio: String
  gender: String @shape(in: ["male", "female", "other"])
  ethnicity: String
  birthday: String
  following: [String!]
  followers: [String!]

  foodPrefs: [String!]

  visited: [Restaurant!]! @relation(name: "RestaurantVisitors")
}

type Owner @model {
  id: ID! @isUnique
  createdAt: DateTime!
  updatedAt: DateTime!

  authID: String!
  firstName: String!
  lastName: String!
  profileImage: String
  email: String!
  phone: String
  langPref: String
  bio: String
  gender: String @shape(in: ["male", "female", "other"])
  ethnicity: String
  foodPrefs: [String!]
  birthday: String
  following: [String!]
  followers: [String!]

  isVerified: Boolean!

  restaurants: Restaurant @relation(name: "OwnerRestaurant")
}


###         -- HASHTAGS CONTENTS --         ###

type Hashtag @model {
  id: ID! @isUnique

  name: String!
  numberOfPosts: Int!

  posts: [Post] @relation(name: "HashtagPosts")
  review: [Review] @relation(name: "HashtagReviews")
}

type Post @model {
  id: ID! @isUnique
  createdAt: DateTime!
  updatedAt: DateTime!

  hashtag: Hashtag! @relation(name: "HashtagPosts")
}


###         -- RESTAURANTS  --          ###
type Restaurant @model {
  id: ID! @isUnique
  createdAt: DateTime!
  updatedAt: DateTime!

  images: [String!]
  visits: Int!
  categories: [String!]
  thumbs: Int!

  owner: Owner! @relation(name: "OwnerRestaurant")
  visitors: [Consumer] @relation(name: "RestaurantVisitors")
  story: Story! @relation(name: "RestaurantStory")
  location: Location! @relation(name: "RestaurantLocation")
  amenities: [Amenity] @relation(name: "RestaurantAmenities")
  reviews: [Reviews] @relation(name: "RestaurantReviews")
}

type Story @model {
  id: ID! @isUnique
  createdAt: DateTime!
  updatedAt: DateTime!

  title: String!

  restaurant: Restaurant! @relation(name: "RestaurantStory")
  contents: [Content!]! @relation(name: "StoryContent")
}

type Review @model {
  id: ID! @isUnique
  createdAt: DateTime!
  updatedAt: DateTime!

  title: String!
  text: String!
  thumbs(thumb: Thumbs!): Boolean! = false

  restaurant: Restaurant! @relation(name: "RestaurantReviews")
  hashtag: Hashtag! @relation(name: "HashtagReviews")
}

type Location @model {
  id: ID! @isUnique

  street: String!
  street2: String
  city: String!
  postalCode: String!
  state: String
  country: String!
  lat: Float!
  lng: Float!
  restaurant: Restaurant! @relation(name: "RestaurantLocation")
}

type Content @model {
  id: ID! @isUnique
  createdAt: DateTime!
  updatedAt: DateTime!

  image: String
  text: String!

  story: Story! @relation(name: "StoryContent")
}

type Amenity @model {
  id: ID! @isUnique

  name: String!
  description: String

  restaurant: Restaurant @relation(name: "RestaurantAmenities")
}

###         -- ENUMS --         ###
enum Thumbs {
  AMBIENCE
  FOOD
  SERVICE
}